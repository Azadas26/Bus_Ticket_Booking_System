import { Accounts, Secrets } from '@vonage/accounts';
import { Applications } from '@vonage/applications';
import { AuthInterface } from '@vonage/auth';
import { ConfigParams } from '@vonage/server-client';
import { Messages } from '@vonage/messages';
import { NumberInsights } from '@vonage/number-insights';
import { Numbers } from '@vonage/numbers';
import { Pricing } from '@vonage/pricing';
import { Redact } from '@vonage/redact';
import { SMS } from '@vonage/sms';
import { Users } from '@vonage/users';
import { Verify } from '@vonage/verify';
import { Verify2 } from '@vonage/verify2';
import { Voice } from '@vonage/voice';
import { Video } from '@vonage/video';
import { Conversations } from '@vonage/conversations';
/**
 * Represents the Vonage SDK for interacting with Vonage APIs.
 */
export declare class Vonage {
    /**
     * The credentials used for authentication.
     */
    protected credentials: AuthInterface;
    /**
     * Optional configuration parameters.
     */
    protected options: ConfigParams;
    /**
     * Provides access to the Accounts API.
     */
    accounts: Accounts;
    /**
     * Provides access to the Applications API.
     */
    applications: Applications;
    /**
     * Provides access to the Messages API.
     */
    messages: Messages;
    /**
     * Provides access to the Number Insights API.
     */
    numberInsights: NumberInsights;
    /**
     * Provides access to the Numbers API.
     */
    numbers: Numbers;
    /**
     * Provides access to the Pricing API.
     */
    pricing: Pricing;
    /**
     * Provides access to the Redact API.
     */
    redact: Redact;
    /**
     * Provides access to the Secrets API.
     */
    secrets: Secrets;
    /**
     * Provides access to the SMS API.
     */
    sms: SMS;
    /**
     * Provides access to the Users API.
     */
    users: Users;
    /**
     * Provides access to the Verify V2 API.
     */
    verify2: Verify2;
    /**
     * Provides access to the Verify API.
     */
    verify: Verify;
    /**
     * Provides access to the Voice API.
     */
    voice: Voice;
    /**
     * Provides access to the Video API.
     */
    video: Video;
    /**
     * Provides access to the Conversations API.
     */
    conversations: Conversations;
    /**
     * The credentials used for authentication.
     * @param {AuthInterface} credentials - The authentication credentials.
     * @param {ConfigParams} [options] - Optional configuration parameters.
     */
    constructor(credentials: AuthInterface, options?: ConfigParams);
}
