import { NCCOActions } from '../../enums';
import { DTMFSettings } from '../../types';
import { InputAction } from '../../types';
import { SpeechSettings } from '../../types';
import { Serializable } from '../../ncco';
/**
 * Represents an Input action in the Nexmo Call Control Object (NCCO) for gathering user input.
 */
export declare class Input implements InputAction, Serializable {
    /**
     * The action type, which is always 'input'.
     */
    action: NCCOActions.INPUT;
    /**
     * An array of input types ('dtmf' and/or 'speech').
     */
    type: string[];
    /**
     * DTMF input settings.
     */
    dtmf?: DTMFSettings;
    /**
     * Speech input settings.
     */
    speech?: SpeechSettings;
    /**
     * An array of URLs to send events to asynchronously.
     */
    eventUrl?: string[];
    /**
     * The HTTP method used to send events (e.g., 'POST' or 'GET').
     */
    eventMethod?: string;
    /**
     * Create a new Input instance.
     *
     * @param {DTMFSettings} dtmf - DTMF input settings.
     * @param {SpeechSettings} speech - Speech input settings.
     * @param {string} eventUrl - URL to send events to asynchronously.
     * @param {string} eventMethod - The HTTP method used to send events.
     */
    constructor(dtmf?: DTMFSettings, speech?: SpeechSettings, eventUrl?: string, eventMethod?: string);
    /**
     * Serialize the Input action to a Nexmo Call Control Object (NCCO) format.
     *
     * @return {InputAction} - The serialized Input action.
     */
    serializeToNCCO(): InputAction;
}
